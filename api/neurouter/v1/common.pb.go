// Copyright 2024 Neurouter Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: neurouter/v1/common.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Modality defines the types of input/output the model can handle.
type Modality int32

const (
	Modality_MODALITY_UNSPECIFIED Modality = 0
	Modality_MODALITY_TEXT        Modality = 1
	Modality_MODALITY_IMAGE       Modality = 2
	Modality_MODALITY_AUDIO       Modality = 3
	Modality_MODALITY_VIDEO       Modality = 4
)

// Enum value maps for Modality.
var (
	Modality_name = map[int32]string{
		0: "MODALITY_UNSPECIFIED",
		1: "MODALITY_TEXT",
		2: "MODALITY_IMAGE",
		3: "MODALITY_AUDIO",
		4: "MODALITY_VIDEO",
	}
	Modality_value = map[string]int32{
		"MODALITY_UNSPECIFIED": 0,
		"MODALITY_TEXT":        1,
		"MODALITY_IMAGE":       2,
		"MODALITY_AUDIO":       3,
		"MODALITY_VIDEO":       4,
	}
)

func (x Modality) Enum() *Modality {
	p := new(Modality)
	*p = x
	return p
}

func (x Modality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Modality) Descriptor() protoreflect.EnumDescriptor {
	return file_neurouter_v1_common_proto_enumTypes[0].Descriptor()
}

func (Modality) Type() protoreflect.EnumType {
	return &file_neurouter_v1_common_proto_enumTypes[0]
}

func (x Modality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Modality.Descriptor instead.
func (Modality) EnumDescriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{0}
}

// Capability defines what the model can do.
type Capability int32

const (
	Capability_CAPABILITY_UNSPECIFIED Capability = 0
	Capability_CAPABILITY_CHAT        Capability = 1
	Capability_CAPABILITY_COMPLETION  Capability = 2
	Capability_CAPABILITY_EMBEDDING   Capability = 3
)

// Enum value maps for Capability.
var (
	Capability_name = map[int32]string{
		0: "CAPABILITY_UNSPECIFIED",
		1: "CAPABILITY_CHAT",
		2: "CAPABILITY_COMPLETION",
		3: "CAPABILITY_EMBEDDING",
	}
	Capability_value = map[string]int32{
		"CAPABILITY_UNSPECIFIED": 0,
		"CAPABILITY_CHAT":        1,
		"CAPABILITY_COMPLETION":  2,
		"CAPABILITY_EMBEDDING":   3,
	}
)

func (x Capability) Enum() *Capability {
	p := new(Capability)
	*p = x
	return p
}

func (x Capability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Capability) Descriptor() protoreflect.EnumDescriptor {
	return file_neurouter_v1_common_proto_enumTypes[1].Descriptor()
}

func (Capability) Type() protoreflect.EnumType {
	return &file_neurouter_v1_common_proto_enumTypes[1]
}

func (x Capability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Capability.Descriptor instead.
func (Capability) EnumDescriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{1}
}

type GenerationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTokens        int64   `protobuf:"varint,1,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature      float32 `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP             float32 `protobuf:"fixed32,3,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	TopK             int64   `protobuf:"varint,4,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	FrequencyPenalty float32 `protobuf:"fixed32,5,opt,name=frequency_penalty,json=frequencyPenalty,proto3" json:"frequency_penalty,omitempty"`
	PresencePenalty  float32 `protobuf:"fixed32,6,opt,name=presence_penalty,json=presencePenalty,proto3" json:"presence_penalty,omitempty"`
	// Types that are assignable to Template:
	//
	//	*GenerationConfig_PresetTemplate
	Template isGenerationConfig_Template `protobuf_oneof:"template"`
	// Types that are assignable to Grammar:
	//
	//	*GenerationConfig_PresetGrammar
	//	*GenerationConfig_GbnfGrammar
	//	*GenerationConfig_JsonSchema
	Grammar isGenerationConfig_Grammar `protobuf_oneof:"grammar"`
}

func (x *GenerationConfig) Reset() {
	*x = GenerationConfig{}
	mi := &file_neurouter_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig) ProtoMessage() {}

func (x *GenerationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig.ProtoReflect.Descriptor instead.
func (*GenerationConfig) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *GenerationConfig) GetMaxTokens() int64 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *GenerationConfig) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GenerationConfig) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *GenerationConfig) GetTopK() int64 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *GenerationConfig) GetFrequencyPenalty() float32 {
	if x != nil {
		return x.FrequencyPenalty
	}
	return 0
}

func (x *GenerationConfig) GetPresencePenalty() float32 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (m *GenerationConfig) GetTemplate() isGenerationConfig_Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (x *GenerationConfig) GetPresetTemplate() string {
	if x, ok := x.GetTemplate().(*GenerationConfig_PresetTemplate); ok {
		return x.PresetTemplate
	}
	return ""
}

func (m *GenerationConfig) GetGrammar() isGenerationConfig_Grammar {
	if m != nil {
		return m.Grammar
	}
	return nil
}

func (x *GenerationConfig) GetPresetGrammar() string {
	if x, ok := x.GetGrammar().(*GenerationConfig_PresetGrammar); ok {
		return x.PresetGrammar
	}
	return ""
}

func (x *GenerationConfig) GetGbnfGrammar() string {
	if x, ok := x.GetGrammar().(*GenerationConfig_GbnfGrammar); ok {
		return x.GbnfGrammar
	}
	return ""
}

func (x *GenerationConfig) GetJsonSchema() string {
	if x, ok := x.GetGrammar().(*GenerationConfig_JsonSchema); ok {
		return x.JsonSchema
	}
	return ""
}

type isGenerationConfig_Template interface {
	isGenerationConfig_Template()
}

type GenerationConfig_PresetTemplate struct {
	PresetTemplate string `protobuf:"bytes,50,opt,name=preset_template,json=presetTemplate,proto3,oneof"`
}

func (*GenerationConfig_PresetTemplate) isGenerationConfig_Template() {}

type isGenerationConfig_Grammar interface {
	isGenerationConfig_Grammar()
}

type GenerationConfig_PresetGrammar struct {
	PresetGrammar string `protobuf:"bytes,60,opt,name=preset_grammar,json=presetGrammar,proto3,oneof"`
}

type GenerationConfig_GbnfGrammar struct {
	GbnfGrammar string `protobuf:"bytes,61,opt,name=gbnf_grammar,json=gbnfGrammar,proto3,oneof"`
}

type GenerationConfig_JsonSchema struct {
	JsonSchema string `protobuf:"bytes,62,opt,name=json_schema,json=jsonSchema,proto3,oneof"`
}

func (*GenerationConfig_PresetGrammar) isGenerationConfig_Grammar() {}

func (*GenerationConfig_GbnfGrammar) isGenerationConfig_Grammar() {}

func (*GenerationConfig_JsonSchema) isGenerationConfig_Grammar() {}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage *Statistics_Usage `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	mi := &file_neurouter_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *Statistics) GetUsage() *Statistics_Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

// Multi-modality content
type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*Content_Text
	//	*Content_Image_
	//	*Content_Thinking
	Content isContent_Content `protobuf_oneof:"content"`
}

func (x *Content) Reset() {
	*x = Content{}
	mi := &file_neurouter_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{2}
}

func (m *Content) GetContent() isContent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Content) GetText() string {
	if x, ok := x.GetContent().(*Content_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Content) GetImage() *Content_Image {
	if x, ok := x.GetContent().(*Content_Image_); ok {
		return x.Image
	}
	return nil
}

func (x *Content) GetThinking() string {
	if x, ok := x.GetContent().(*Content_Thinking); ok {
		return x.Thinking
	}
	return ""
}

type isContent_Content interface {
	isContent_Content()
}

type Content_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Content_Image_ struct {
	Image *Content_Image `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

type Content_Thinking struct {
	Thinking string `protobuf:"bytes,3,opt,name=thinking,proto3,oneof"`
}

func (*Content_Text) isContent_Content() {}

func (*Content_Image_) isContent_Content() {}

func (*Content_Thinking) isContent_Content() {}

type Tool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Tool:
	//
	//	*Tool_Function_
	Tool isTool_Tool `protobuf_oneof:"tool"`
}

func (x *Tool) Reset() {
	*x = Tool{}
	mi := &file_neurouter_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool) ProtoMessage() {}

func (x *Tool) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool.ProtoReflect.Descriptor instead.
func (*Tool) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{3}
}

func (m *Tool) GetTool() isTool_Tool {
	if m != nil {
		return m.Tool
	}
	return nil
}

func (x *Tool) GetFunction() *Tool_Function {
	if x, ok := x.GetTool().(*Tool_Function_); ok {
		return x.Function
	}
	return nil
}

type isTool_Tool interface {
	isTool_Tool()
}

type Tool_Function_ struct {
	Function *Tool_Function `protobuf:"bytes,1,opt,name=function,proto3,oneof"`
}

func (*Tool_Function_) isTool_Tool() {}

type Statistics_Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromptTokens     int32 `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens int32 `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
}

func (x *Statistics_Usage) Reset() {
	*x = Statistics_Usage{}
	mi := &file_neurouter_v1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics_Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics_Usage) ProtoMessage() {}

func (x *Statistics_Usage) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics_Usage.ProtoReflect.Descriptor instead.
func (*Statistics_Usage) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Statistics_Usage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *Statistics_Usage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

type Content_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*Content_Image_Url
	//	*Content_Image_Data
	Source isContent_Image_Source `protobuf_oneof:"source"`
}

func (x *Content_Image) Reset() {
	*x = Content_Image{}
	mi := &file_neurouter_v1_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Image) ProtoMessage() {}

func (x *Content_Image) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Image.ProtoReflect.Descriptor instead.
func (*Content_Image) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{2, 0}
}

func (m *Content_Image) GetSource() isContent_Image_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *Content_Image) GetUrl() string {
	if x, ok := x.GetSource().(*Content_Image_Url); ok {
		return x.Url
	}
	return ""
}

func (x *Content_Image) GetData() []byte {
	if x, ok := x.GetSource().(*Content_Image_Data); ok {
		return x.Data
	}
	return nil
}

type isContent_Image_Source interface {
	isContent_Image_Source()
}

type Content_Image_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}

type Content_Image_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*Content_Image_Url) isContent_Image_Source() {}

func (*Content_Image_Data) isContent_Image_Source() {}

type Tool_Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Parameters  *Tool_Function_Parameters `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Tool_Function) Reset() {
	*x = Tool_Function{}
	mi := &file_neurouter_v1_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool_Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool_Function) ProtoMessage() {}

func (x *Tool_Function) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool_Function.ProtoReflect.Descriptor instead.
func (*Tool_Function) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Tool_Function) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tool_Function) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tool_Function) GetParameters() *Tool_Function_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type Tool_Function_Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string                                        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Properties map[string]*Tool_Function_Parameters_Property `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Required   []string                                      `protobuf:"bytes,3,rep,name=required,proto3" json:"required,omitempty"`
}

func (x *Tool_Function_Parameters) Reset() {
	*x = Tool_Function_Parameters{}
	mi := &file_neurouter_v1_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool_Function_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool_Function_Parameters) ProtoMessage() {}

func (x *Tool_Function_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool_Function_Parameters.ProtoReflect.Descriptor instead.
func (*Tool_Function_Parameters) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *Tool_Function_Parameters) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Tool_Function_Parameters) GetProperties() map[string]*Tool_Function_Parameters_Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Tool_Function_Parameters) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

type Tool_Function_Parameters_Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Tool_Function_Parameters_Property) Reset() {
	*x = Tool_Function_Parameters_Property{}
	mi := &file_neurouter_v1_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool_Function_Parameters_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool_Function_Parameters_Property) ProtoMessage() {}

func (x *Tool_Function_Parameters_Property) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool_Function_Parameters_Property.ProtoReflect.Descriptor instead.
func (*Tool_Function_Parameters_Property) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_common_proto_rawDescGZIP(), []int{3, 0, 0, 0}
}

func (x *Tool_Function_Parameters_Property) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Tool_Function_Parameters_Property) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_neurouter_v1_common_proto protoreflect.FileDescriptor

var file_neurouter_v1_common_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x65, 0x75,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x88, 0x03, 0x0a, 0x10, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x50, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x12, 0x29, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0e,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x6d, 0x6d, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0c, 0x67, 0x62, 0x6e, 0x66, 0x5f, 0x67, 0x72,
	0x61, 0x6d, 0x6d, 0x61, 0x72, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x67,
	0x62, 0x6e, 0x66, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x0a, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x67, 0x72, 0x61,
	0x6d, 0x6d, 0x61, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x59, 0x0a, 0x05, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x74,
	0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x3b, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x9d, 0x04, 0x0a, 0x04, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e,
	0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd1, 0x03, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e,
	0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0xc6, 0x02, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x40, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x6e, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x6f, 0x6f,
	0x6c, 0x2a, 0x73, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x14, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x44, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f,
	0x44, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x56,
	0x49, 0x44, 0x45, 0x4f, 0x10, 0x04, 0x2a, 0x72, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x45,
	0x4d, 0x42, 0x45, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x61, 0x78, 0x65,
	0x73, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_neurouter_v1_common_proto_rawDescOnce sync.Once
	file_neurouter_v1_common_proto_rawDescData = file_neurouter_v1_common_proto_rawDesc
)

func file_neurouter_v1_common_proto_rawDescGZIP() []byte {
	file_neurouter_v1_common_proto_rawDescOnce.Do(func() {
		file_neurouter_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_neurouter_v1_common_proto_rawDescData)
	})
	return file_neurouter_v1_common_proto_rawDescData
}

var file_neurouter_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_neurouter_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_neurouter_v1_common_proto_goTypes = []any{
	(Modality)(0),                             // 0: neurouter.v1.Modality
	(Capability)(0),                           // 1: neurouter.v1.Capability
	(*GenerationConfig)(nil),                  // 2: neurouter.v1.GenerationConfig
	(*Statistics)(nil),                        // 3: neurouter.v1.Statistics
	(*Content)(nil),                           // 4: neurouter.v1.Content
	(*Tool)(nil),                              // 5: neurouter.v1.Tool
	(*Statistics_Usage)(nil),                  // 6: neurouter.v1.Statistics.Usage
	(*Content_Image)(nil),                     // 7: neurouter.v1.Content.Image
	(*Tool_Function)(nil),                     // 8: neurouter.v1.Tool.Function
	(*Tool_Function_Parameters)(nil),          // 9: neurouter.v1.Tool.Function.Parameters
	(*Tool_Function_Parameters_Property)(nil), // 10: neurouter.v1.Tool.Function.Parameters.Property
	nil, // 11: neurouter.v1.Tool.Function.Parameters.PropertiesEntry
}
var file_neurouter_v1_common_proto_depIdxs = []int32{
	6,  // 0: neurouter.v1.Statistics.usage:type_name -> neurouter.v1.Statistics.Usage
	7,  // 1: neurouter.v1.Content.image:type_name -> neurouter.v1.Content.Image
	8,  // 2: neurouter.v1.Tool.function:type_name -> neurouter.v1.Tool.Function
	9,  // 3: neurouter.v1.Tool.Function.parameters:type_name -> neurouter.v1.Tool.Function.Parameters
	11, // 4: neurouter.v1.Tool.Function.Parameters.properties:type_name -> neurouter.v1.Tool.Function.Parameters.PropertiesEntry
	10, // 5: neurouter.v1.Tool.Function.Parameters.PropertiesEntry.value:type_name -> neurouter.v1.Tool.Function.Parameters.Property
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_neurouter_v1_common_proto_init() }
func file_neurouter_v1_common_proto_init() {
	if File_neurouter_v1_common_proto != nil {
		return
	}
	file_neurouter_v1_common_proto_msgTypes[0].OneofWrappers = []any{
		(*GenerationConfig_PresetTemplate)(nil),
		(*GenerationConfig_PresetGrammar)(nil),
		(*GenerationConfig_GbnfGrammar)(nil),
		(*GenerationConfig_JsonSchema)(nil),
	}
	file_neurouter_v1_common_proto_msgTypes[2].OneofWrappers = []any{
		(*Content_Text)(nil),
		(*Content_Image_)(nil),
		(*Content_Thinking)(nil),
	}
	file_neurouter_v1_common_proto_msgTypes[3].OneofWrappers = []any{
		(*Tool_Function_)(nil),
	}
	file_neurouter_v1_common_proto_msgTypes[5].OneofWrappers = []any{
		(*Content_Image_Url)(nil),
		(*Content_Image_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_neurouter_v1_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_neurouter_v1_common_proto_goTypes,
		DependencyIndexes: file_neurouter_v1_common_proto_depIdxs,
		EnumInfos:         file_neurouter_v1_common_proto_enumTypes,
		MessageInfos:      file_neurouter_v1_common_proto_msgTypes,
	}.Build()
	File_neurouter_v1_common_proto = out.File
	file_neurouter_v1_common_proto_rawDesc = nil
	file_neurouter_v1_common_proto_goTypes = nil
	file_neurouter_v1_common_proto_depIdxs = nil
}
