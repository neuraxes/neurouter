// Copyright 2024 Neurouter Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package neurouter.v1;

import "google/api/annotations.proto";
import "neurouter/v1/common.proto";

option go_package = "github.com/neuraxes/neurouter/api/neurouter/v1;v1";

service Chat {
  rpc Chat(ChatReq) returns (ChatResp) {
    option (google.api.http) = {
      get: "/v1/chat"
    };
  }
  rpc ChatStream(ChatReq) returns (stream ChatResp) {}
}

enum Role {
  SYSTEM = 0;
  USER = 1;
  MODEL = 2;
  TOOL = 3;
}

message Message {
  // The unique identifier of the message
  string id = 1;
  // The role of the message sender
  Role role = 2;
  // The optional name of the message sender
  string name = 3;
  // The multi-modality content
  repeated Content contents = 4;
  // Indicate the message is a response to a tool call
  string tool_call_id = 5;
}

message ChatReq {
  // The unique identifier of the chat
  string id = 1;
  // The requested model to use
  string model = 2;
  // The generation configuration
  GenerationConfig config = 3;
  // The conversation history
  repeated Message messages = 4;
  // The tools available for the model to use
  repeated Tool tools = 5;
}

message ChatResp {
  // The unique identifier of the chat
  string id = 1;
  // The model used to generate the response
  string model = 2;
  // The generated message
  Message message = 3;
  // The statistics for the generation
  Statistics statistics = 4;
}
