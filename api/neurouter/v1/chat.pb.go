// Copyright 2024 Neurouter Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: neurouter/v1/chat.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_SYSTEM Role = 0
	Role_USER   Role = 1
	Role_MODEL  Role = 2
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "SYSTEM",
		1: "USER",
		2: "MODEL",
	}
	Role_value = map[string]int32{
		"SYSTEM": 0,
		"USER":   1,
		"MODEL":  2,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_neurouter_v1_chat_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_neurouter_v1_chat_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_neurouter_v1_chat_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the message
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The role of the message sender
	Role Role `protobuf:"varint,2,opt,name=role,proto3,enum=neurouter.v1.Role" json:"role,omitempty"`
	// The optional name of the message sender
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The multi-modality content
	Contents      []*Content `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_neurouter_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_SYSTEM
}

func (x *Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Message) GetContents() []*Content {
	if x != nil {
		return x.Contents
	}
	return nil
}

type ChatReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the chat
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The requested model to use
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// The generation configuration
	Config *GenerationConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// The conversation history
	Messages []*Message `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	// The tools available for the model to use
	Tools         []*Tool `protobuf:"bytes,5,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatReq) Reset() {
	*x = ChatReq{}
	mi := &file_neurouter_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatReq) ProtoMessage() {}

func (x *ChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatReq.ProtoReflect.Descriptor instead.
func (*ChatReq) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatReq) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatReq) GetConfig() *GenerationConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ChatReq) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatReq) GetTools() []*Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

type ChatResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the chat
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The model used to generate the response
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// The generated message
	Message *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// The statistics for the generation
	Statistics    *Statistics `protobuf:"bytes,4,opt,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResp) Reset() {
	*x = ChatResp{}
	mi := &file_neurouter_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResp) ProtoMessage() {}

func (x *ChatResp) ProtoReflect() protoreflect.Message {
	mi := &file_neurouter_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResp.ProtoReflect.Descriptor instead.
func (*ChatResp) Descriptor() ([]byte, []int) {
	return file_neurouter_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatResp) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatResp) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatResp) GetStatistics() *Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

var File_neurouter_v1_chat_proto protoreflect.FileDescriptor

const file_neurouter_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x17neurouter/v1/chat.proto\x12\fneurouter.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x19neurouter/v1/common.proto\x1a\x1aneurouter/v1/content.proto\"\x88\x01\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x04role\x18\x02 \x01(\x0e2\x12.neurouter.v1.RoleR\x04role\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x121\n" +
	"\bcontents\x18\x04 \x03(\v2\x15.neurouter.v1.ContentR\bcontents\"\xc4\x01\n" +
	"\aChatReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x126\n" +
	"\x06config\x18\x03 \x01(\v2\x1e.neurouter.v1.GenerationConfigR\x06config\x121\n" +
	"\bmessages\x18\x04 \x03(\v2\x15.neurouter.v1.MessageR\bmessages\x12(\n" +
	"\x05tools\x18\x05 \x03(\v2\x12.neurouter.v1.ToolR\x05tools\"\x9b\x01\n" +
	"\bChatResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12/\n" +
	"\amessage\x18\x03 \x01(\v2\x15.neurouter.v1.MessageR\amessage\x128\n" +
	"\n" +
	"statistics\x18\x04 \x01(\v2\x18.neurouter.v1.StatisticsR\n" +
	"statistics*'\n" +
	"\x04Role\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x00\x12\b\n" +
	"\x04USER\x10\x01\x12\t\n" +
	"\x05MODEL\x10\x022\x90\x01\n" +
	"\x04Chat\x12G\n" +
	"\x04Chat\x12\x15.neurouter.v1.ChatReq\x1a\x16.neurouter.v1.ChatResp\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/v1/chat\x12?\n" +
	"\n" +
	"ChatStream\x12\x15.neurouter.v1.ChatReq\x1a\x16.neurouter.v1.ChatResp\"\x000\x01B3Z1github.com/neuraxes/neurouter/api/neurouter/v1;v1b\x06proto3"

var (
	file_neurouter_v1_chat_proto_rawDescOnce sync.Once
	file_neurouter_v1_chat_proto_rawDescData []byte
)

func file_neurouter_v1_chat_proto_rawDescGZIP() []byte {
	file_neurouter_v1_chat_proto_rawDescOnce.Do(func() {
		file_neurouter_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_neurouter_v1_chat_proto_rawDesc), len(file_neurouter_v1_chat_proto_rawDesc)))
	})
	return file_neurouter_v1_chat_proto_rawDescData
}

var file_neurouter_v1_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_neurouter_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_neurouter_v1_chat_proto_goTypes = []any{
	(Role)(0),                // 0: neurouter.v1.Role
	(*Message)(nil),          // 1: neurouter.v1.Message
	(*ChatReq)(nil),          // 2: neurouter.v1.ChatReq
	(*ChatResp)(nil),         // 3: neurouter.v1.ChatResp
	(*Content)(nil),          // 4: neurouter.v1.Content
	(*GenerationConfig)(nil), // 5: neurouter.v1.GenerationConfig
	(*Tool)(nil),             // 6: neurouter.v1.Tool
	(*Statistics)(nil),       // 7: neurouter.v1.Statistics
}
var file_neurouter_v1_chat_proto_depIdxs = []int32{
	0, // 0: neurouter.v1.Message.role:type_name -> neurouter.v1.Role
	4, // 1: neurouter.v1.Message.contents:type_name -> neurouter.v1.Content
	5, // 2: neurouter.v1.ChatReq.config:type_name -> neurouter.v1.GenerationConfig
	1, // 3: neurouter.v1.ChatReq.messages:type_name -> neurouter.v1.Message
	6, // 4: neurouter.v1.ChatReq.tools:type_name -> neurouter.v1.Tool
	1, // 5: neurouter.v1.ChatResp.message:type_name -> neurouter.v1.Message
	7, // 6: neurouter.v1.ChatResp.statistics:type_name -> neurouter.v1.Statistics
	2, // 7: neurouter.v1.Chat.Chat:input_type -> neurouter.v1.ChatReq
	2, // 8: neurouter.v1.Chat.ChatStream:input_type -> neurouter.v1.ChatReq
	3, // 9: neurouter.v1.Chat.Chat:output_type -> neurouter.v1.ChatResp
	3, // 10: neurouter.v1.Chat.ChatStream:output_type -> neurouter.v1.ChatResp
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_neurouter_v1_chat_proto_init() }
func file_neurouter_v1_chat_proto_init() {
	if File_neurouter_v1_chat_proto != nil {
		return
	}
	file_neurouter_v1_common_proto_init()
	file_neurouter_v1_content_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_neurouter_v1_chat_proto_rawDesc), len(file_neurouter_v1_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_neurouter_v1_chat_proto_goTypes,
		DependencyIndexes: file_neurouter_v1_chat_proto_depIdxs,
		EnumInfos:         file_neurouter_v1_chat_proto_enumTypes,
		MessageInfos:      file_neurouter_v1_chat_proto_msgTypes,
	}.Build()
	File_neurouter_v1_chat_proto = out.File
	file_neurouter_v1_chat_proto_goTypes = nil
	file_neurouter_v1_chat_proto_depIdxs = nil
}
