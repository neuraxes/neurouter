// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: conf/upstream.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Upstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*UpstreamConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *Upstream) Reset() {
	*x = Upstream{}
	mi := &file_conf_upstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Upstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upstream) ProtoMessage() {}

func (x *Upstream) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upstream.ProtoReflect.Descriptor instead.
func (*Upstream) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{0}
}

func (x *Upstream) GetConfigs() []*UpstreamConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type UpstreamConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Models []*Model `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
	// Types that are assignable to Config:
	//
	//	*UpstreamConfig_Laas
	//	*UpstreamConfig_OpenAi
	//	*UpstreamConfig_Google
	//	*UpstreamConfig_Anthropic
	//	*UpstreamConfig_DeepSeek
	Config isUpstreamConfig_Config `protobuf_oneof:"config"`
}

func (x *UpstreamConfig) Reset() {
	*x = UpstreamConfig{}
	mi := &file_conf_upstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamConfig) ProtoMessage() {}

func (x *UpstreamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamConfig.ProtoReflect.Descriptor instead.
func (*UpstreamConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{1}
}

func (x *UpstreamConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpstreamConfig) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (m *UpstreamConfig) GetConfig() isUpstreamConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *UpstreamConfig) GetLaas() *LaaSConfig {
	if x, ok := x.GetConfig().(*UpstreamConfig_Laas); ok {
		return x.Laas
	}
	return nil
}

func (x *UpstreamConfig) GetOpenAi() *OpenAIConfig {
	if x, ok := x.GetConfig().(*UpstreamConfig_OpenAi); ok {
		return x.OpenAi
	}
	return nil
}

func (x *UpstreamConfig) GetGoogle() *GoogleConfig {
	if x, ok := x.GetConfig().(*UpstreamConfig_Google); ok {
		return x.Google
	}
	return nil
}

func (x *UpstreamConfig) GetAnthropic() *AnthropicConfig {
	if x, ok := x.GetConfig().(*UpstreamConfig_Anthropic); ok {
		return x.Anthropic
	}
	return nil
}

func (x *UpstreamConfig) GetDeepSeek() *DeepSeekConfig {
	if x, ok := x.GetConfig().(*UpstreamConfig_DeepSeek); ok {
		return x.DeepSeek
	}
	return nil
}

type isUpstreamConfig_Config interface {
	isUpstreamConfig_Config()
}

type UpstreamConfig_Laas struct {
	Laas *LaaSConfig `protobuf:"bytes,100,opt,name=laas,proto3,oneof"`
}

type UpstreamConfig_OpenAi struct {
	OpenAi *OpenAIConfig `protobuf:"bytes,101,opt,name=open_ai,json=openAi,proto3,oneof"`
}

type UpstreamConfig_Google struct {
	Google *GoogleConfig `protobuf:"bytes,102,opt,name=google,proto3,oneof"`
}

type UpstreamConfig_Anthropic struct {
	Anthropic *AnthropicConfig `protobuf:"bytes,103,opt,name=anthropic,proto3,oneof"`
}

type UpstreamConfig_DeepSeek struct {
	DeepSeek *DeepSeekConfig `protobuf:"bytes,104,opt,name=deep_seek,json=deepSeek,proto3,oneof"`
}

func (*UpstreamConfig_Laas) isUpstreamConfig_Config() {}

func (*UpstreamConfig_OpenAi) isUpstreamConfig_Config() {}

func (*UpstreamConfig_Google) isUpstreamConfig_Config() {}

func (*UpstreamConfig_Anthropic) isUpstreamConfig_Config() {}

func (*UpstreamConfig_DeepSeek) isUpstreamConfig_Config() {}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Provider string `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	mi := &file_conf_upstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{2}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type LaaSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *LaaSConfig) Reset() {
	*x = LaaSConfig{}
	mi := &file_conf_upstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LaaSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaaSConfig) ProtoMessage() {}

func (x *LaaSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaaSConfig.ProtoReflect.Descriptor instead.
func (*LaaSConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{3}
}

func (x *LaaSConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type OpenAIConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey                          string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl                         string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	PreferStringContentForSystem    bool   `protobuf:"varint,3,opt,name=prefer_string_content_for_system,json=preferStringContentForSystem,proto3" json:"prefer_string_content_for_system,omitempty"`
	PreferStringContentForUser      bool   `protobuf:"varint,4,opt,name=prefer_string_content_for_user,json=preferStringContentForUser,proto3" json:"prefer_string_content_for_user,omitempty"`
	PreferStringContentForAssistant bool   `protobuf:"varint,5,opt,name=prefer_string_content_for_assistant,json=preferStringContentForAssistant,proto3" json:"prefer_string_content_for_assistant,omitempty"`
	PreferStringContentForTool      bool   `protobuf:"varint,6,opt,name=prefer_string_content_for_tool,json=preferStringContentForTool,proto3" json:"prefer_string_content_for_tool,omitempty"`
	PreferSinglePartContent         bool   `protobuf:"varint,7,opt,name=prefer_single_part_content,json=preferSinglePartContent,proto3" json:"prefer_single_part_content,omitempty"`
}

func (x *OpenAIConfig) Reset() {
	*x = OpenAIConfig{}
	mi := &file_conf_upstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenAIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAIConfig) ProtoMessage() {}

func (x *OpenAIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAIConfig.ProtoReflect.Descriptor instead.
func (*OpenAIConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{4}
}

func (x *OpenAIConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *OpenAIConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *OpenAIConfig) GetPreferStringContentForSystem() bool {
	if x != nil {
		return x.PreferStringContentForSystem
	}
	return false
}

func (x *OpenAIConfig) GetPreferStringContentForUser() bool {
	if x != nil {
		return x.PreferStringContentForUser
	}
	return false
}

func (x *OpenAIConfig) GetPreferStringContentForAssistant() bool {
	if x != nil {
		return x.PreferStringContentForAssistant
	}
	return false
}

func (x *OpenAIConfig) GetPreferStringContentForTool() bool {
	if x != nil {
		return x.PreferStringContentForTool
	}
	return false
}

func (x *OpenAIConfig) GetPreferSinglePartContent() bool {
	if x != nil {
		return x.PreferSinglePartContent
	}
	return false
}

type GoogleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *GoogleConfig) Reset() {
	*x = GoogleConfig{}
	mi := &file_conf_upstream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleConfig) ProtoMessage() {}

func (x *GoogleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleConfig.ProtoReflect.Descriptor instead.
func (*GoogleConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{5}
}

func (x *GoogleConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type AnthropicConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey  string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// Whether to merge the system prompt into messages
	MergeSystem bool `protobuf:"varint,3,opt,name=merge_system,json=mergeSystem,proto3" json:"merge_system,omitempty"`
}

func (x *AnthropicConfig) Reset() {
	*x = AnthropicConfig{}
	mi := &file_conf_upstream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnthropicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnthropicConfig) ProtoMessage() {}

func (x *AnthropicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnthropicConfig.ProtoReflect.Descriptor instead.
func (*AnthropicConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{6}
}

func (x *AnthropicConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *AnthropicConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *AnthropicConfig) GetMergeSystem() bool {
	if x != nil {
		return x.MergeSystem
	}
	return false
}

type DeepSeekConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey  string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
}

func (x *DeepSeekConfig) Reset() {
	*x = DeepSeekConfig{}
	mi := &file_conf_upstream_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepSeekConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepSeekConfig) ProtoMessage() {}

func (x *DeepSeekConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_upstream_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepSeekConfig.ProtoReflect.Descriptor instead.
func (*DeepSeekConfig) Descriptor() ([]byte, []int) {
	return file_conf_upstream_proto_rawDescGZIP(), []int{7}
}

func (x *DeepSeekConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DeepSeekConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

var File_conf_upstream_proto protoreflect.FileDescriptor

var file_conf_upstream_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x22, 0x42, 0x0a, 0x08, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xf4, 0x02, 0x0a, 0x0e, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x6c,
	0x61, 0x61, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x75, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x61, 0x53, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x61, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x61, 0x69, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x41, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x41, 0x69, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x6e, 0x74, 0x68,
	0x72, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65,
	0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x68, 0x72,
	0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e,
	0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x65, 0x65, 0x70, 0x5f,
	0x73, 0x65, 0x65, 0x6b, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x75,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x65,
	0x65, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x65, 0x70,
	0x53, 0x65, 0x65, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x47,
	0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x0a, 0x4c, 0x61, 0x61, 0x53, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x9d, 0x03, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x49, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x20, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1c, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x42,
	0x0a, 0x1e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x23, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x12, 0x42, 0x0a, 0x1e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x6f,
	0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x27, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x68, 0x0a, 0x0f, 0x41, 0x6e,
	0x74, 0x68, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x22, 0x44, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x53, 0x65, 0x65, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x2e, 0x78, 0x64, 0x65, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x54, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x2f, 0x6e, 0x65, 0x75, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_upstream_proto_rawDescOnce sync.Once
	file_conf_upstream_proto_rawDescData = file_conf_upstream_proto_rawDesc
)

func file_conf_upstream_proto_rawDescGZIP() []byte {
	file_conf_upstream_proto_rawDescOnce.Do(func() {
		file_conf_upstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_upstream_proto_rawDescData)
	})
	return file_conf_upstream_proto_rawDescData
}

var file_conf_upstream_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_conf_upstream_proto_goTypes = []any{
	(*Upstream)(nil),        // 0: neurouter.v1.Upstream
	(*UpstreamConfig)(nil),  // 1: neurouter.v1.UpstreamConfig
	(*Model)(nil),           // 2: neurouter.v1.Model
	(*LaaSConfig)(nil),      // 3: neurouter.v1.LaaSConfig
	(*OpenAIConfig)(nil),    // 4: neurouter.v1.OpenAIConfig
	(*GoogleConfig)(nil),    // 5: neurouter.v1.GoogleConfig
	(*AnthropicConfig)(nil), // 6: neurouter.v1.AnthropicConfig
	(*DeepSeekConfig)(nil),  // 7: neurouter.v1.DeepSeekConfig
}
var file_conf_upstream_proto_depIdxs = []int32{
	1, // 0: neurouter.v1.Upstream.configs:type_name -> neurouter.v1.UpstreamConfig
	2, // 1: neurouter.v1.UpstreamConfig.models:type_name -> neurouter.v1.Model
	3, // 2: neurouter.v1.UpstreamConfig.laas:type_name -> neurouter.v1.LaaSConfig
	4, // 3: neurouter.v1.UpstreamConfig.open_ai:type_name -> neurouter.v1.OpenAIConfig
	5, // 4: neurouter.v1.UpstreamConfig.google:type_name -> neurouter.v1.GoogleConfig
	6, // 5: neurouter.v1.UpstreamConfig.anthropic:type_name -> neurouter.v1.AnthropicConfig
	7, // 6: neurouter.v1.UpstreamConfig.deep_seek:type_name -> neurouter.v1.DeepSeekConfig
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_conf_upstream_proto_init() }
func file_conf_upstream_proto_init() {
	if File_conf_upstream_proto != nil {
		return
	}
	file_conf_upstream_proto_msgTypes[1].OneofWrappers = []any{
		(*UpstreamConfig_Laas)(nil),
		(*UpstreamConfig_OpenAi)(nil),
		(*UpstreamConfig_Google)(nil),
		(*UpstreamConfig_Anthropic)(nil),
		(*UpstreamConfig_DeepSeek)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_upstream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_upstream_proto_goTypes,
		DependencyIndexes: file_conf_upstream_proto_depIdxs,
		MessageInfos:      file_conf_upstream_proto_msgTypes,
	}.Build()
	File_conf_upstream_proto = out.File
	file_conf_upstream_proto_rawDesc = nil
	file_conf_upstream_proto_goTypes = nil
	file_conf_upstream_proto_depIdxs = nil
}
