# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/chat:
        get:
            tags:
                - Chat
            operationId: Chat_Chat
            parameters:
                - name: id
                  in: query
                  description: The unique identifier of the chat
                  schema:
                    type: string
                - name: model
                  in: query
                  description: The requested model to use
                  schema:
                    type: string
                - name: config.maxTokens
                  in: query
                  schema:
                    type: string
                - name: config.temperature
                  in: query
                  schema:
                    type: number
                    format: float
                - name: config.topP
                  in: query
                  schema:
                    type: number
                    format: float
                - name: config.topK
                  in: query
                  schema:
                    type: string
                - name: config.frequencyPenalty
                  in: query
                  schema:
                    type: number
                    format: float
                - name: config.presencePenalty
                  in: query
                  schema:
                    type: number
                    format: float
                - name: config.presetTemplate
                  in: query
                  schema:
                    type: string
                - name: config.presetGrammar
                  in: query
                  schema:
                    type: string
                - name: config.gbnfGrammar
                  in: query
                  schema:
                    type: string
                - name: config.jsonSchema
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/neurouter.v1.ChatResp'
    /v1/embed:
        post:
            tags:
                - Embedding
            operationId: Embedding_Embed
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/neurouter.v1.EmbedReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/neurouter.v1.EmbedResp'
    /v1/models:
        get:
            tags:
                - Model
            operationId: Model_ListModel
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/neurouter.v1.ListModelResp'
components:
    schemas:
        neurouter.v1.ChatResp:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier of the chat
                model:
                    type: string
                    description: The model used to generate the response
                message:
                    allOf:
                        - $ref: '#/components/schemas/neurouter.v1.Message'
                    description: The generated message
                statistics:
                    allOf:
                        - $ref: '#/components/schemas/neurouter.v1.Statistics'
                    description: The statistics for the generation
        neurouter.v1.Content:
            type: object
            properties:
                text:
                    type: string
                image:
                    $ref: '#/components/schemas/neurouter.v1.Image'
                thinking:
                    type: string
                functionCall:
                    $ref: '#/components/schemas/neurouter.v1.FunctionCall'
            description: Multi-modality content
        neurouter.v1.EmbedReq:
            type: object
            properties:
                id:
                    type: string
                model:
                    type: string
                contents:
                    type: array
                    items:
                        $ref: '#/components/schemas/neurouter.v1.Content'
        neurouter.v1.EmbedResp:
            type: object
            properties:
                id:
                    type: string
                model:
                    type: string
                embedding:
                    type: array
                    items:
                        type: number
                        format: float
        neurouter.v1.FunctionCall:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                arguments:
                    type: string
            description: Represent a function tool call content
        neurouter.v1.Image:
            type: object
            properties:
                url:
                    type: string
                data:
                    type: string
                    format: bytes
            description: Represent a image content
        neurouter.v1.ListModelResp:
            type: object
            properties:
                models:
                    type: array
                    items:
                        $ref: '#/components/schemas/neurouter.v1.ModelSpec'
        neurouter.v1.Message:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier of the message
                role:
                    type: integer
                    description: The role of the message sender
                    format: enum
                name:
                    type: string
                    description: The optional name of the message sender
                contents:
                    type: array
                    items:
                        $ref: '#/components/schemas/neurouter.v1.Content'
                    description: The multi-modality content
                toolCallId:
                    type: string
                    description: Indicate the message is a response to a tool call
        neurouter.v1.ModelSpec:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier of the model.
                name:
                    type: string
                    description: The display name of the model.
                from:
                    type: string
                    description: The entity that owns the model.
                provider:
                    type: string
                    description: The model service provider.
                modalities:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: The modalities supported by the model.
                capabilities:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: The capabilities of the model.
        neurouter.v1.Statistics:
            type: object
            properties:
                usage:
                    $ref: '#/components/schemas/neurouter.v1.Statistics_Usage'
        neurouter.v1.Statistics_Usage:
            type: object
            properties:
                promptTokens:
                    type: integer
                    format: uint32
                completionTokens:
                    type: integer
                    format: uint32
                cachedPromptTokens:
                    type: integer
                    format: uint32
tags:
    - name: Chat
    - name: Embedding
    - name: Model
